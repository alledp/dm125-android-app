// Generated by view binder compiler. Do not edit!
package com.aduilio.mytasks.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aduilio.mytasks.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextInputEditText etTitle;

  @NonNull
  public final FloatingActionButton fabNewTask;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final RecyclerView rvTasks;

  @NonNull
  public final SwipeRefreshLayout srlTasks;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextInputLayout tilTitle;

  @NonNull
  public final TextView tvMessage;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @Nullable TextInputEditText etTitle, @NonNull FloatingActionButton fabNewTask,
      @NonNull ConstraintLayout main, @NonNull RecyclerView rvTasks,
      @NonNull SwipeRefreshLayout srlTasks, @Nullable TextInputLayout tilTitle,
      @NonNull TextView tvMessage) {
    this.rootView = rootView;
    this.etTitle = etTitle;
    this.fabNewTask = fabNewTask;
    this.main = main;
    this.rvTasks = rvTasks;
    this.srlTasks = srlTasks;
    this.tilTitle = tilTitle;
    this.tvMessage = tvMessage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etTitle;
      TextInputEditText etTitle = ViewBindings.findChildViewById(rootView, id);

      id = R.id.fabNewTask;
      FloatingActionButton fabNewTask = ViewBindings.findChildViewById(rootView, id);
      if (fabNewTask == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.rvTasks;
      RecyclerView rvTasks = ViewBindings.findChildViewById(rootView, id);
      if (rvTasks == null) {
        break missingId;
      }

      id = R.id.srlTasks;
      SwipeRefreshLayout srlTasks = ViewBindings.findChildViewById(rootView, id);
      if (srlTasks == null) {
        break missingId;
      }

      id = R.id.tilTitle;
      TextInputLayout tilTitle = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvMessage;
      TextView tvMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvMessage == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, etTitle, fabNewTask, main,
          rvTasks, srlTasks, tilTitle, tvMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
